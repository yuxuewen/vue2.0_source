{"version":3,"file":"vue.js","sources":["../src/util/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["/**\r\n * 判断是否是对象\r\n */\r\nexport function isObject(obj){\r\n    return typeof obj==='object' && obj!==null;\r\n      \r\n}","\r\nexport let newArrayProto=Object.create(Array.prototype);\r\n let oldMethods=Array.prototype;\r\n //需要重写数组的方法 \r\n let methods=[\r\n       'push',\r\n       'pop',\r\n       'unshift',\r\n       'shift',\r\n       'splice',\r\n       'sort',\r\n       'reverst'\r\n ];\r\n methods.forEach((method)=>{\r\n       newArrayProto[method]=function(...args){\r\n              //依然执行原数组原型上的方法\r\n              let result= oldMethods[method].call(this,...args);\r\n              let insered=null,//新增的元素\r\n                  ob=this._ob_\r\n              switch(method){\r\n                   case 'push':\r\n                   case 'unshift':\r\n                       insered=args;\r\n                       break;\r\n                    case 'splice':\r\n                        insered=args.splice(2);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                   \r\n              }\r\n              //对于新增元素进行观测\r\n              insered && ob.observeArray(insered);\r\n              return result;\r\n       }\r\n })","/**\r\n * 数据观测\r\n */\r\nimport {isObject} from '../util/index.js'\r\nimport {newArrayProto} from './array'\r\n class Observer{\r\n       constructor(data)\r\n       {\r\n            //将 this 挂载在data 上 可以使用ob 调用方法\r\n             Object.defineProperty(data,'_ob_',{\r\n                   enumerable:false,\r\n                   configurable:false,\r\n                   value:this\r\n             })\r\n\r\n             if(data instanceof Array)\r\n             {\r\n                 //数组是 [].__proto__=Array.prototype\r\n                 //更改需要观测数组的原型链\r\n                 data.__proto__=newArrayProto;\r\n                 this.observeArray(data);\r\n             }\r\n             else{\r\n                 //监测对象\r\n                  this.walk(data);\r\n             }\r\n\r\n             \r\n       }\r\n       /**\r\n        * 观测数组\r\n        * @param {*} data \r\n        */\r\n       observeArray(data){\r\n\r\n          for(let i=0;i<data.length;i++)\r\n          {\r\n              observe(data[i])\r\n          }\r\n\r\n       }\r\n       /**\r\n        * 遍历监测对象\r\n        * @param {*} data \r\n        */\r\n       walk(data){\r\n          //  Object.keys 不可遍历不可枚举类型 所以 _ob_ 不会被遍历\r\n         Object.keys(data).forEach(key=>{\r\n             defineReactive(data,key,data[key])\r\n         })\r\n       }\r\n\r\n\r\n }\r\n /**\r\n  * 数据监测\r\n  * @param {*} data \r\n  * @param {*} key \r\n  * @param {*} value \r\n  */\r\n\r\n function defineReactive(data,key,value){\r\n       observe(value);// value 还是对象，递归\r\n       Object.defineProperty(data,key,{\r\n           get(){\r\n               return value;\r\n\r\n           },\r\n           set(newValue){\r\n               if(newValue===value) return;\r\n               //对于赋值的如果是对象 进行响应式监测\r\n               observe(newValue);\r\n           }\r\n       })\r\n\r\n }\r\n /**\r\n  * 观测数据方法\r\n  * @param {*} data \r\n  */\r\n\r\n export function observe(data)\r\n {\r\n       //不是对象\r\n       if(!isObject(data)) return;\r\n       //说明已经被观测\r\n       if(data._ob_ instanceof Observer) return;\r\n       return new Observer(data);\r\n }\r\n\r\n","\r\nimport {observe} from './observe/index.js'\r\nexport let initState=(vm)=>{\r\n     initData(vm)\r\n       \r\n}\r\n\r\nfunction initData(vm){\r\n    const options=vm.$options;\r\n    if(options.data)\r\n    {\r\n        // 如果 data 是函数得到函数执行的返回值\r\n        let  data=typeof options.data==='function'?(options.data).call(vm):options.data;\r\n        console.log(`需要观测的值${data.toString()}`);\r\n        console.log(data)\r\n        vm._data=data;\r\n        observe(data)\r\n    }\r\n     \r\n       \r\n}","//正则表达（太复杂了！！！）\r\n\r\n//              字母a-zA-Z_ - . 数组小写字母 大写字母  \r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\r\n// ?:匹配不捕获   <aaa:aaa>\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// startTagOpen 可以匹配到开始标签 正则捕获到的内容是 (标签名)\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\n// 闭合标签 </xxxxxxx>  \r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\n// <div aa   =   \"123\"  bb=123  cc='123'\r\n// 捕获到的是 属性名 和 属性值 arguments[1] || arguments[2] || arguments[2]\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n// <div >   <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\r\n// 匹配动态变量的  +? 尽可能少匹配\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n export function parseHtml(html) {\r\n\r\n    function start(tagName, attrs) {\r\n        console.log(tagName,attrs)\r\n    }\r\n    function end(tagName) {\r\n        console.log(tagName)\r\n    }\r\n    function chars(text) {\r\n        console.log(text)\r\n    }\r\n    // 根据 html 解析成树结构  </span></div>\r\n    while (html) {\r\n        let textEnd = html.indexOf('<');\r\n        //表明是标签\r\n        if (textEnd == 0) {\r\n            const startTageMatch = parseStartTag();\r\n            if (startTageMatch) {\r\n                // 开始标签\r\n                start(startTageMatch.tagName,startTageMatch.attrs)\r\n            }\r\n            const endTagMatch = html.match(endTag);\r\n\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1])\r\n            }\r\n            // 结束标签 \r\n        }\r\n\r\n        // 如果不是0 说明是文本\r\n        let text;\r\n        if (textEnd > 0) {\r\n            text = html.substring(0, textEnd); // 是文本就把文本内容进行截取\r\n            chars(text);\r\n        }\r\n        if (text) {\r\n            advance(text.length); // 删除文本内容\r\n        }\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen); // 匹配开始标签\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 匹配到的标签名\r\n                attrs: []\r\n            }\r\n            //将标签名移除\r\n            advance(start[0].length);\r\n            let end, attr;\r\n            //开始匹配标签中属性\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                //每匹配成功就要移除\r\n                advance(attr[0].length);\r\n                //添加属性\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n            };\r\n            //例如：匹配到了<div class='content'> 中的> 后结束\r\n            if (end) {\r\n                //移除节点  匹配标签结束的 >\r\n                advance(end[0].length);\r\n                return match;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// var html='<button type=\"submit\" id=\"register-submit-btn\" class=\"btn blue pull-right\">注册 <i class=\"m-icon-swapright m-icon-white\"></i>/button>            '\r\n// parseHtml(html);\r\n","import {parseHtml} from './parser.js'\r\n/**\r\n * 解析器\r\n * @param {*} templete 模板\r\n */\r\nexport function compileToFunctions(templete){\r\n    return parseHtml(templete)\r\n\r\n}","/**\r\n * 初始化\r\n */\r\nimport {initState} from './state.js';\r\nimport {compileToFunctions} from './compiler/index.js'\r\n export let  initMixin=(Vue)=>{\r\n        /**\r\n         * 在原型上添加初始化的方法\r\n         */\r\n        Vue.prototype._init=function(options){\r\n             const vm=this;\r\n             //将参数挂载到 vm 上\r\n             vm.$options=options;\r\n             initState(vm);\r\n            if(vm.$options.el)\r\n            {\r\n                 this.$mount(vm.$options.el);\r\n            }\r\n        }\r\n        /**\r\n         * 挂载\r\n         * 三种: render 函数 >template 模板 >取html页面的模板\r\n         * \r\n         * new Vue({\r\n              el:\"#app\"\r\n             template:'<div>{{msg}}</div>',\r\n          //ast 语法树\r\n          render:()=>{\r\n\r\n          },\r\n          data:()=>{\r\n                return {\r\n\r\n                }\r\n          }\r\n        })._mount('#app');\r\n         */\r\n       \r\n        Vue.prototype.$mount=function(el){\r\n             const vm=this;\r\n             const {render,template}=vm.$options;\r\n             //render 必须是一个函数\r\n             if(!render ||  typeof render!=='function')\r\n             {\r\n                  //有模板取模板\r\n                   let _template=template || document.querySelector(el).outerHTML;\r\n                   //将模板解析成ast语法树\r\n                   const render=compileToFunctions(_template);\r\n                   vm.$options.render=render;\r\n\r\n             }\r\n             \r\n                \r\n        }\r\n        \r\n  }\r\n","import { initMixin } from \"./init\";\r\n\r\n/**\r\n * vue 入口文件\r\n * @param {*} options \r\n */\r\nfunction Vue(options){\r\n    this._init(options);\r\n\r\n}\r\n//扩展 Vue方法\r\ninitMixin(Vue);\r\nexport default Vue;"],"names":["isObject","obj","newArrayProto","Object","create","Array","prototype","oldMethods","methods","forEach","method","args","result","call","insered","ob","_ob_","splice","observeArray","Observer","data","defineProperty","enumerable","configurable","value","__proto__","walk","i","length","observe","keys","key","defineReactive","get","set","newValue","initState","vm","initData","options","$options","console","log","toString","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHtml","html","start","tagName","attrs","end","chars","text","textEnd","indexOf","startTageMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","push","name","compileToFunctions","templete","initMixin","Vue","_init","el","$mount","render","template","_template","document","querySelector","outerHTML"],"mappings":"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"}